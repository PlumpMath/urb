;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;													;;
;;    :: ufo - a stack-based lisp language ::       ;;
;;													;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

== : is attractor operator, which attract all tokens in a block into it like a definition.
== [] is un-eval brace annotation.
== << is assignment operator.
                     
== functional pattern matching featured.
== |  guard for case matching.
== -> annotation for next act if case matched.

(:square 
    | 0 -> 0
    | 1 -> 1
    | n -> n n * )

(:factorial 
    | 0 -> 0
    | 1 -> 1 
    | n -> n n 1 - factorial * )

(2 square factorial) ===> 24

(System System.IO [ using ] map)

(:sum [ + ] reduce )

(:print 
	| [object[] as arg] [String as str] -> arg str Console.WriteLine 
    | [str as String]                   ->     str Console.WriteLine )
    
(:set-position 
    | 0f 0f 0f -> ignore
    | x  y  z  -> [transform.position] p label 
	                p.x x + p.y y + p.z z + Vector3 new p << )
                     
 