;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;													;;
;;    :: ufo - a stack-based lisp language ::       ;;
;;													;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

@square (x) 
    (x x *)
!save

12 square

@factorial (acc n)
	((n 1 >)
		( n 1 - acc * n 1 - factorial )
		(acc)
	if)
!save

;;;;;;;;;;;;;;;;;;;;;
;;				   ;;
;; @ - uneval mode ;;
;; ! - eval mode   ;;
;; ' - quote       ;;
;; () - list data  ;;
;;				   ;;
;;;;;;;;;;;;;;;;;;;;;

( 12 13 )         ;; list data 
(1 2 3) '+ reduce ;; reduce a list with an operator

(System System.IO) 'using map

Urb namespace

MainClass (partial static public) class 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                        ;;
;; [] is to force argument to function,   ;;
;; by adding new stack to next function.  ;;
;;                                        ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MainClass.listStack member

@ sum (a b c) ((a b c) '+ reduce) !save

@ overload_enforce () 
    [ "Enforced console.writeline" Console.WriteLine ] 
!save

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                      ;;
;; expressive primitive types:          ;;
;; int, float, string, symbol, literal. ;;
;;                                      ;;
;; reference types = class instances.   ;;
;;                                      ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@ static_method_2 () (
    [ 1 2 3 "{1} {2} {3}" Console.WriteLine ]
) !def

;; label things to shorten code.
@ set_position (x y z)
    [transform.position :p label]
        p.x x + 
        p.y y +
        p.z z +
        Vector3 new p =
    p end
!save

;; end command to check ending of each name as segment key.
MainClass end