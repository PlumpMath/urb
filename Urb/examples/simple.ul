;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                               ;;;
;;; load - load reference library ;;;
;;; using is like using in C#.    ;;;
;;;                               ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(load System)
(using System.Collections.Generic)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                               ;;;
;;; :executable mean to have .EXE ;;;
;;; :library mean to have .DLL    ;;;
;;;                               ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(attr :public :executable)
(extends :Object)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                        ;;;
;;; member will be public without static.  ;;;
;;;                                        ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(member :warning "Only work with instance !")



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                        ;;;
;;; define is naturally public and static. ;;;
;;;                                        ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define :message "Hello")

(define :dict (new Dictionary<String,String>)) 

(define (print::void line::string args::params-object[])
 	(Console.WriteLine line args))
        
(define (print::void line::string)
    (Console.WriteLine line))

(define (factorial::int acc::int n::int)
    (if (> n 1)
        (return (factorial (* acc n) (- n 1)))
        (return acc)))

(define (py_text::string x::float y::float z::float)
	(return 
		(string.Format
            "Pytago: {0}" 
            (+ (* x x)
               (* y y)
               (* z z)))))

(define (pytago::void x::float y::float z::float)
    (dict.Clear)
    (print (py_text x y z)))
        
(define (test::void)
    (var i 0)
    (label Condition)
    (+= i 1)
    (Console.WriteLine i)
    (if (and (< i 10) (< -1 i) 
             (or true false))
        (jump Condition))
	(var result i)
    (Console.WriteLine "Good bye {0} !" result))




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;                                                                 ;;;
;;; statement outside functions goes to Main() function as default. ;;;
;;;                                                                 ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(print "{0} {1} !" message "message")
(print "{0}"(factorial 1 10))
(pytago 1.0f 2.0f 3.0f)
(test)
(Console.ReadLine)